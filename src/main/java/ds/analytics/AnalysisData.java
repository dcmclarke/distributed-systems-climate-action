// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: src/main/resources/climate_analytics.proto
// Protobuf Java Version: 4.31.1

package ds.analytics;

/**
 * Protobuf type {@code analytics.AnalysisData}
 */
@com.google.protobuf.Generated
public final class AnalysisData extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:analytics.AnalysisData)
    AnalysisDataOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 31,
      /* patch= */ 1,
      /* suffix= */ "",
      AnalysisData.class.getName());
  }
  // Use AnalysisData.newBuilder() to construct.
  private AnalysisData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private AnalysisData() {
    location_ = "";
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return ds.analytics.ClimateAnalyticsOuterClass.internal_static_analytics_AnalysisData_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return ds.analytics.ClimateAnalyticsOuterClass.internal_static_analytics_AnalysisData_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            ds.analytics.AnalysisData.class, ds.analytics.AnalysisData.Builder.class);
  }

  public static final int TEMPERATURE_FIELD_NUMBER = 1;
  private float temperature_ = 0F;
  /**
   * <code>float temperature = 1;</code>
   * @return The temperature.
   */
  @java.lang.Override
  public float getTemperature() {
    return temperature_;
  }

  public static final int HUMIDITY_FIELD_NUMBER = 2;
  private float humidity_ = 0F;
  /**
   * <code>float humidity = 2;</code>
   * @return The humidity.
   */
  @java.lang.Override
  public float getHumidity() {
    return humidity_;
  }

  public static final int CO2_LEVEL_FIELD_NUMBER = 3;
  private int co2Level_ = 0;
  /**
   * <code>int32 co2_level = 3;</code>
   * @return The co2Level.
   */
  @java.lang.Override
  public int getCo2Level() {
    return co2Level_;
  }

  public static final int AIR_QUALITY_INDEX_FIELD_NUMBER = 4;
  private int airQualityIndex_ = 0;
  /**
   * <code>int32 air_quality_index = 4;</code>
   * @return The airQualityIndex.
   */
  @java.lang.Override
  public int getAirQualityIndex() {
    return airQualityIndex_;
  }

  public static final int TIMESTAMP_FIELD_NUMBER = 5;
  private long timestamp_ = 0L;
  /**
   * <code>int64 timestamp = 5;</code>
   * @return The timestamp.
   */
  @java.lang.Override
  public long getTimestamp() {
    return timestamp_;
  }

  public static final int LOCATION_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private volatile java.lang.Object location_ = "";
  /**
   * <code>string location = 6;</code>
   * @return The location.
   */
  @java.lang.Override
  public java.lang.String getLocation() {
    java.lang.Object ref = location_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      location_ = s;
      return s;
    }
  }
  /**
   * <code>string location = 6;</code>
   * @return The bytes for location.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getLocationBytes() {
    java.lang.Object ref = location_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      location_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (java.lang.Float.floatToRawIntBits(temperature_) != 0) {
      output.writeFloat(1, temperature_);
    }
    if (java.lang.Float.floatToRawIntBits(humidity_) != 0) {
      output.writeFloat(2, humidity_);
    }
    if (co2Level_ != 0) {
      output.writeInt32(3, co2Level_);
    }
    if (airQualityIndex_ != 0) {
      output.writeInt32(4, airQualityIndex_);
    }
    if (timestamp_ != 0L) {
      output.writeInt64(5, timestamp_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(location_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 6, location_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (java.lang.Float.floatToRawIntBits(temperature_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(1, temperature_);
    }
    if (java.lang.Float.floatToRawIntBits(humidity_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(2, humidity_);
    }
    if (co2Level_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, co2Level_);
    }
    if (airQualityIndex_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, airQualityIndex_);
    }
    if (timestamp_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(5, timestamp_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(location_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(6, location_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof ds.analytics.AnalysisData)) {
      return super.equals(obj);
    }
    ds.analytics.AnalysisData other = (ds.analytics.AnalysisData) obj;

    if (java.lang.Float.floatToIntBits(getTemperature())
        != java.lang.Float.floatToIntBits(
            other.getTemperature())) return false;
    if (java.lang.Float.floatToIntBits(getHumidity())
        != java.lang.Float.floatToIntBits(
            other.getHumidity())) return false;
    if (getCo2Level()
        != other.getCo2Level()) return false;
    if (getAirQualityIndex()
        != other.getAirQualityIndex()) return false;
    if (getTimestamp()
        != other.getTimestamp()) return false;
    if (!getLocation()
        .equals(other.getLocation())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TEMPERATURE_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getTemperature());
    hash = (37 * hash) + HUMIDITY_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getHumidity());
    hash = (37 * hash) + CO2_LEVEL_FIELD_NUMBER;
    hash = (53 * hash) + getCo2Level();
    hash = (37 * hash) + AIR_QUALITY_INDEX_FIELD_NUMBER;
    hash = (53 * hash) + getAirQualityIndex();
    hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTimestamp());
    hash = (37 * hash) + LOCATION_FIELD_NUMBER;
    hash = (53 * hash) + getLocation().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static ds.analytics.AnalysisData parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ds.analytics.AnalysisData parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ds.analytics.AnalysisData parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ds.analytics.AnalysisData parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ds.analytics.AnalysisData parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ds.analytics.AnalysisData parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ds.analytics.AnalysisData parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static ds.analytics.AnalysisData parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static ds.analytics.AnalysisData parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static ds.analytics.AnalysisData parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static ds.analytics.AnalysisData parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static ds.analytics.AnalysisData parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(ds.analytics.AnalysisData prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code analytics.AnalysisData}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:analytics.AnalysisData)
      ds.analytics.AnalysisDataOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ds.analytics.ClimateAnalyticsOuterClass.internal_static_analytics_AnalysisData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ds.analytics.ClimateAnalyticsOuterClass.internal_static_analytics_AnalysisData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ds.analytics.AnalysisData.class, ds.analytics.AnalysisData.Builder.class);
    }

    // Construct using ds.analytics.AnalysisData.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      temperature_ = 0F;
      humidity_ = 0F;
      co2Level_ = 0;
      airQualityIndex_ = 0;
      timestamp_ = 0L;
      location_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return ds.analytics.ClimateAnalyticsOuterClass.internal_static_analytics_AnalysisData_descriptor;
    }

    @java.lang.Override
    public ds.analytics.AnalysisData getDefaultInstanceForType() {
      return ds.analytics.AnalysisData.getDefaultInstance();
    }

    @java.lang.Override
    public ds.analytics.AnalysisData build() {
      ds.analytics.AnalysisData result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public ds.analytics.AnalysisData buildPartial() {
      ds.analytics.AnalysisData result = new ds.analytics.AnalysisData(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(ds.analytics.AnalysisData result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.temperature_ = temperature_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.humidity_ = humidity_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.co2Level_ = co2Level_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.airQualityIndex_ = airQualityIndex_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.timestamp_ = timestamp_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.location_ = location_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof ds.analytics.AnalysisData) {
        return mergeFrom((ds.analytics.AnalysisData)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(ds.analytics.AnalysisData other) {
      if (other == ds.analytics.AnalysisData.getDefaultInstance()) return this;
      if (java.lang.Float.floatToRawIntBits(other.getTemperature()) != 0) {
        setTemperature(other.getTemperature());
      }
      if (java.lang.Float.floatToRawIntBits(other.getHumidity()) != 0) {
        setHumidity(other.getHumidity());
      }
      if (other.getCo2Level() != 0) {
        setCo2Level(other.getCo2Level());
      }
      if (other.getAirQualityIndex() != 0) {
        setAirQualityIndex(other.getAirQualityIndex());
      }
      if (other.getTimestamp() != 0L) {
        setTimestamp(other.getTimestamp());
      }
      if (!other.getLocation().isEmpty()) {
        location_ = other.location_;
        bitField0_ |= 0x00000020;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              temperature_ = input.readFloat();
              bitField0_ |= 0x00000001;
              break;
            } // case 13
            case 21: {
              humidity_ = input.readFloat();
              bitField0_ |= 0x00000002;
              break;
            } // case 21
            case 24: {
              co2Level_ = input.readInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              airQualityIndex_ = input.readInt32();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              timestamp_ = input.readInt64();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 50: {
              location_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private float temperature_ ;
    /**
     * <code>float temperature = 1;</code>
     * @return The temperature.
     */
    @java.lang.Override
    public float getTemperature() {
      return temperature_;
    }
    /**
     * <code>float temperature = 1;</code>
     * @param value The temperature to set.
     * @return This builder for chaining.
     */
    public Builder setTemperature(float value) {

      temperature_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>float temperature = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearTemperature() {
      bitField0_ = (bitField0_ & ~0x00000001);
      temperature_ = 0F;
      onChanged();
      return this;
    }

    private float humidity_ ;
    /**
     * <code>float humidity = 2;</code>
     * @return The humidity.
     */
    @java.lang.Override
    public float getHumidity() {
      return humidity_;
    }
    /**
     * <code>float humidity = 2;</code>
     * @param value The humidity to set.
     * @return This builder for chaining.
     */
    public Builder setHumidity(float value) {

      humidity_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>float humidity = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearHumidity() {
      bitField0_ = (bitField0_ & ~0x00000002);
      humidity_ = 0F;
      onChanged();
      return this;
    }

    private int co2Level_ ;
    /**
     * <code>int32 co2_level = 3;</code>
     * @return The co2Level.
     */
    @java.lang.Override
    public int getCo2Level() {
      return co2Level_;
    }
    /**
     * <code>int32 co2_level = 3;</code>
     * @param value The co2Level to set.
     * @return This builder for chaining.
     */
    public Builder setCo2Level(int value) {

      co2Level_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>int32 co2_level = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearCo2Level() {
      bitField0_ = (bitField0_ & ~0x00000004);
      co2Level_ = 0;
      onChanged();
      return this;
    }

    private int airQualityIndex_ ;
    /**
     * <code>int32 air_quality_index = 4;</code>
     * @return The airQualityIndex.
     */
    @java.lang.Override
    public int getAirQualityIndex() {
      return airQualityIndex_;
    }
    /**
     * <code>int32 air_quality_index = 4;</code>
     * @param value The airQualityIndex to set.
     * @return This builder for chaining.
     */
    public Builder setAirQualityIndex(int value) {

      airQualityIndex_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>int32 air_quality_index = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearAirQualityIndex() {
      bitField0_ = (bitField0_ & ~0x00000008);
      airQualityIndex_ = 0;
      onChanged();
      return this;
    }

    private long timestamp_ ;
    /**
     * <code>int64 timestamp = 5;</code>
     * @return The timestamp.
     */
    @java.lang.Override
    public long getTimestamp() {
      return timestamp_;
    }
    /**
     * <code>int64 timestamp = 5;</code>
     * @param value The timestamp to set.
     * @return This builder for chaining.
     */
    public Builder setTimestamp(long value) {

      timestamp_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>int64 timestamp = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearTimestamp() {
      bitField0_ = (bitField0_ & ~0x00000010);
      timestamp_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object location_ = "";
    /**
     * <code>string location = 6;</code>
     * @return The location.
     */
    public java.lang.String getLocation() {
      java.lang.Object ref = location_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        location_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string location = 6;</code>
     * @return The bytes for location.
     */
    public com.google.protobuf.ByteString
        getLocationBytes() {
      java.lang.Object ref = location_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        location_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string location = 6;</code>
     * @param value The location to set.
     * @return This builder for chaining.
     */
    public Builder setLocation(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      location_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>string location = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearLocation() {
      location_ = getDefaultInstance().getLocation();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     * <code>string location = 6;</code>
     * @param value The bytes for location to set.
     * @return This builder for chaining.
     */
    public Builder setLocationBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      location_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:analytics.AnalysisData)
  }

  // @@protoc_insertion_point(class_scope:analytics.AnalysisData)
  private static final ds.analytics.AnalysisData DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ds.analytics.AnalysisData();
  }

  public static ds.analytics.AnalysisData getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AnalysisData>
      PARSER = new com.google.protobuf.AbstractParser<AnalysisData>() {
    @java.lang.Override
    public AnalysisData parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<AnalysisData> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AnalysisData> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public ds.analytics.AnalysisData getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

